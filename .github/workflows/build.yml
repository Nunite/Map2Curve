name: Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        build_type: [Release]
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install cmake
      continue-on-error: true

    - name: Set up CMake
      uses: lukka/get-cmake@latest

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: |
        if [ "$RUNNER_OS" == "macOS" ]; then
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
        else
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
        fi

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          cmake --build . --config ${{matrix.build_type}} --parallel
        else
          cmake --build . --config ${{matrix.build_type}} -j $(nproc)
        fi

    - name: Upload Artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: Map2Curve-${{ matrix.os }}-${{ matrix.build_type }}
        path: |
          ${{github.workspace}}/build/bin/*
          !${{github.workspace}}/build/bin/*.pdb
        retention-days: 5 